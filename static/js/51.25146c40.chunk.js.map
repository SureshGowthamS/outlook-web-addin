{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/json/workerManager.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","../node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","../node_modules/monaco-editor/esm/vs/language/json/tokenization.js","../node_modules/monaco-editor/esm/vs/language/json/jsonMode.js"],"names":["Position","Range","Location","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","WorkspaceEdit","Promise","monaco","WorkerManager","defaults","_this","this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","diagnosticsOptions","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","p","completeCallback","errorCallback","r","c","e","then","toShallowCancelPromise","client","_","withSyncedResources","create","line","character","is","value","candidate","Is","objectLiteral","number","one","two","three","four","start","end","Error","uri","range","defined","string","undefined","red","green","blue","alpha","color","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","result","location","message","Warning","Information","Hint","severity","code","source","relatedInformation","title","command","args","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","changes","documentChanges","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolInformation","TextEditChangeImpl","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","Object","_workspaceEdit","forEach","textDocumentEdit","textEditChange","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","version","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","detail","selectionRange","children","deprecated","boolean","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","diagnostics","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocument","TextDocumentSaveReason","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","every","Uri","languageFeatures_Range","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","handle","modeId","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","getModels","d","resource","worker","resetSchema","doValidation","markers","map","diag","lsSeverity","MarkerSeverity","Info","toSeverity","startLineNumber","startColumn","endLineNumber","endColumn","toDiagnostics","getModel","err","console","error","fromPosition","column","lineNumber","fromRange","toRange","toCompletionItemKind","mItemKind","languages","toTextEdit","languageFeatures_CompletionAdapter","CompletionAdapter","provideCompletionItems","token","getWordUntilPosition","wireCancellationToken","doComplete","info","entry","item","insertText","sortText","filterText","insertTextFormat","toMarkdownString","thing","HoverAdapter","provideHover","doHover","toMarkedStringArray","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","mKind","toSymbolKind","fromFormattingOptions","options","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","provideColorPresentations","getColorPresentations","presentations","presentation","FoldingRangeAdapter","provideFoldingRanges","context","ranges","Comment","Imports","Region","toFoldingRangeKind","promise","cancel","onCancellationRequested","createScanner","ignoreTrivia","pos","len","tokenOffset","scanError","scanHexDigits","count","exact","digits","charCodeAt","scanNext","isWhiteSpace","fromCharCode","isLineBreak","ch_1","scanString","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","main_createScanner","createTokenizationSupport","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","comments","numberOfInsertedCharacters","adjustOffset","scanner","lastWasColon","tokens","endState","clone","type","substr","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_PROPERTY_NAME","TOKEN_VALUE_NUMBER","TOKEN_COMMENT_LINE","TOKEN_COMMENT_BLOCK","getStateData","startIndex","scopes","_tokenize","_state","equals","other","setStateData","setupMode","disposables","uris","apply","registerCompletionItemProvider","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","setLanguageConfiguration","richEditConfiguration","registerColorProvider","registerFoldingRangeProvider","__webpack_require__","__webpack_exports__","wordPattern","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn"],"mappings":"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","file":"static/js/51.25146c40.chunk.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nvar Promise = monaco.Promise;\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\n\nvar WorkerManager =\n/** @class */\nfunction () {\n  function WorkerManager(defaults) {\n    var _this = this;\n\n    this._defaults = defaults;\n    this._worker = null;\n    this._idleCheckInterval = setInterval(function () {\n      return _this._checkIfIdle();\n    }, 30 * 1000);\n    this._lastUsedTime = 0;\n    this._configChangeListener = this._defaults.onDidChange(function () {\n      return _this._stopWorker();\n    });\n  }\n\n  WorkerManager.prototype._stopWorker = function () {\n    if (this._worker) {\n      this._worker.dispose();\n\n      this._worker = null;\n    }\n\n    this._client = null;\n  };\n\n  WorkerManager.prototype.dispose = function () {\n    clearInterval(this._idleCheckInterval);\n\n    this._configChangeListener.dispose();\n\n    this._stopWorker();\n  };\n\n  WorkerManager.prototype._checkIfIdle = function () {\n    if (!this._worker) {\n      return;\n    }\n\n    var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n\n    if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n      this._stopWorker();\n    }\n  };\n\n  WorkerManager.prototype._getClient = function () {\n    this._lastUsedTime = Date.now();\n\n    if (!this._client) {\n      this._worker = monaco.editor.createWebWorker({\n        // module that exports the create() method and returns a `JSONWorker` instance\n        moduleId: 'vs/language/json/jsonWorker',\n        label: this._defaults.languageId,\n        // passed in to the create() method\n        createData: {\n          languageSettings: this._defaults.diagnosticsOptions,\n          languageId: this._defaults.languageId\n        }\n      });\n      this._client = this._worker.getProxy();\n    }\n\n    return this._client;\n  };\n\n  WorkerManager.prototype.getLanguageServiceWorker = function () {\n    var _this = this;\n\n    var resources = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      resources[_i] = arguments[_i];\n    }\n\n    var _client;\n\n    return toShallowCancelPromise(this._getClient().then(function (client) {\n      _client = client;\n    }).then(function (_) {\n      return _this._worker.withSyncedResources(resources);\n    }).then(function (_) {\n      return _client;\n    }));\n  };\n\n  return WorkerManager;\n}();\n\nexport { WorkerManager };\n\nfunction toShallowCancelPromise(p) {\n  var completeCallback;\n  var errorCallback;\n  var r = new Promise(function (c, e) {\n    completeCallback = c;\n    errorCallback = e;\n  }, function () {});\n  p.then(completeCallback, errorCallback);\n  return r;\n}","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\n\nexport var Position;\n\n(function (Position) {\n  /**\r\n   * Creates a new Position literal from the given line and character.\r\n   * @param line The position's line.\r\n   * @param character The position's character.\r\n   */\n  function create(line, character) {\n    return {\n      line: line,\n      character: character\n    };\n  }\n\n  Position.create = create;\n  /**\r\n   * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n  }\n\n  Position.is = is;\n})(Position || (Position = {}));\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\n\n\nexport var Range;\n\n(function (Range) {\n  function create(one, two, three, four) {\n    if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n      return {\n        start: Position.create(one, two),\n        end: Position.create(three, four)\n      };\n    } else if (Position.is(one) && Position.is(two)) {\n      return {\n        start: one,\n        end: two\n      };\n    } else {\n      throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n    }\n  }\n\n  Range.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n  }\n\n  Range.is = is;\n})(Range || (Range = {}));\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\n\n\nexport var Location;\n\n(function (Location) {\n  /**\r\n   * Creates a Location literal.\r\n   * @param uri The location's uri.\r\n   * @param range The location's range.\r\n   */\n  function create(uri, range) {\n    return {\n      uri: uri,\n      range: range\n    };\n  }\n\n  Location.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n  }\n\n  Location.is = is;\n})(Location || (Location = {}));\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\n\n\nexport var Color;\n\n(function (Color) {\n  /**\r\n   * Creates a new Color literal.\r\n   */\n  function create(red, green, blue, alpha) {\n    return {\n      red: red,\n      green: green,\n      blue: blue,\n      alpha: alpha\n    };\n  }\n\n  Color.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.number(candidate.red) && Is.number(candidate.green) && Is.number(candidate.blue) && Is.number(candidate.alpha);\n  }\n\n  Color.is = is;\n})(Color || (Color = {}));\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\n\n\nexport var ColorInformation;\n\n(function (ColorInformation) {\n  /**\r\n   * Creates a new ColorInformation literal.\r\n   */\n  function create(range, color) {\n    return {\n      range: range,\n      color: color\n    };\n  }\n\n  ColorInformation.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Range.is(candidate.range) && Color.is(candidate.color);\n  }\n\n  ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\n\n\nexport var ColorPresentation;\n\n(function (ColorPresentation) {\n  /**\r\n   * Creates a new ColorInformation literal.\r\n   */\n  function create(label, textEdit, additionalTextEdits) {\n    return {\n      label: label,\n      textEdit: textEdit,\n      additionalTextEdits: additionalTextEdits\n    };\n  }\n\n  ColorPresentation.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.string(candidate.label) && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate)) && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n  }\n\n  ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\r\n * Enum of known range kinds\r\n */\n\n\nexport var FoldingRangeKind;\n\n(function (FoldingRangeKind) {\n  /**\r\n   * Folding range for a comment\r\n   */\n  FoldingRangeKind[\"Comment\"] = \"comment\";\n  /**\r\n   * Folding range for a imports or includes\r\n   */\n\n  FoldingRangeKind[\"Imports\"] = \"imports\";\n  /**\r\n   * Folding range for a region (e.g. `#region`)\r\n   */\n\n  FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\n\n\nexport var FoldingRange;\n\n(function (FoldingRange) {\n  /**\r\n   * Creates a new FoldingRange literal.\r\n   */\n  function create(startLine, endLine, startCharacter, endCharacter, kind) {\n    var result = {\n      startLine: startLine,\n      endLine: endLine\n    };\n\n    if (Is.defined(startCharacter)) {\n      result.startCharacter = startCharacter;\n    }\n\n    if (Is.defined(endCharacter)) {\n      result.endCharacter = endCharacter;\n    }\n\n    if (Is.defined(kind)) {\n      result.kind = kind;\n    }\n\n    return result;\n  }\n\n  FoldingRange.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.number(candidate.startLine) && Is.number(candidate.startLine) && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter)) && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter)) && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n  }\n\n  FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\n\n\nexport var DiagnosticRelatedInformation;\n\n(function (DiagnosticRelatedInformation) {\n  /**\r\n   * Creates a new DiagnosticRelatedInformation literal.\r\n   */\n  function create(location, message) {\n    return {\n      location: location,\n      message: message\n    };\n  }\n\n  DiagnosticRelatedInformation.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n  }\n\n  DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\r\n * The diagnostic's severity.\r\n */\n\n\nexport var DiagnosticSeverity;\n\n(function (DiagnosticSeverity) {\n  /**\r\n   * Reports an error.\r\n   */\n  DiagnosticSeverity.Error = 1;\n  /**\r\n   * Reports a warning.\r\n   */\n\n  DiagnosticSeverity.Warning = 2;\n  /**\r\n   * Reports an information.\r\n   */\n\n  DiagnosticSeverity.Information = 3;\n  /**\r\n   * Reports a hint.\r\n   */\n\n  DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\n\n\nexport var Diagnostic;\n\n(function (Diagnostic) {\n  /**\r\n   * Creates a new Diagnostic literal.\r\n   */\n  function create(range, message, severity, code, source, relatedInformation) {\n    var result = {\n      range: range,\n      message: message\n    };\n\n    if (Is.defined(severity)) {\n      result.severity = severity;\n    }\n\n    if (Is.defined(code)) {\n      result.code = code;\n    }\n\n    if (Is.defined(source)) {\n      result.source = source;\n    }\n\n    if (Is.defined(relatedInformation)) {\n      result.relatedInformation = relatedInformation;\n    }\n\n    return result;\n  }\n\n  Diagnostic.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && Is.string(candidate.message) && (Is.number(candidate.severity) || Is.undefined(candidate.severity)) && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code)) && (Is.string(candidate.source) || Is.undefined(candidate.source)) && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n  }\n\n  Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\n\n\nexport var Command;\n\n(function (Command) {\n  /**\r\n   * Creates a new Command literal.\r\n   */\n  function create(title, command) {\n    var args = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n\n    var result = {\n      title: title,\n      command: command\n    };\n\n    if (Is.defined(args) && args.length > 0) {\n      result.arguments = args;\n    }\n\n    return result;\n  }\n\n  Command.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n  }\n\n  Command.is = is;\n})(Command || (Command = {}));\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\n\n\nexport var TextEdit;\n\n(function (TextEdit) {\n  /**\r\n   * Creates a replace text edit.\r\n   * @param range The range of text to be replaced.\r\n   * @param newText The new text.\r\n   */\n  function replace(range, newText) {\n    return {\n      range: range,\n      newText: newText\n    };\n  }\n\n  TextEdit.replace = replace;\n  /**\r\n   * Creates a insert text edit.\r\n   * @param position The position to insert the text at.\r\n   * @param newText The text to be inserted.\r\n   */\n\n  function insert(position, newText) {\n    return {\n      range: {\n        start: position,\n        end: position\n      },\n      newText: newText\n    };\n  }\n\n  TextEdit.insert = insert;\n  /**\r\n   * Creates a delete text edit.\r\n   * @param range The range of text to be deleted.\r\n   */\n\n  function del(range) {\n    return {\n      range: range,\n      newText: ''\n    };\n  }\n\n  TextEdit.del = del;\n\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && Is.string(candidate.newText) && Range.is(candidate.range);\n  }\n\n  TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\n\n\nexport var TextDocumentEdit;\n\n(function (TextDocumentEdit) {\n  /**\r\n   * Creates a new `TextDocumentEdit`\r\n   */\n  function create(textDocument, edits) {\n    return {\n      textDocument: textDocument,\n      edits: edits\n    };\n  }\n\n  TextDocumentEdit.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && VersionedTextDocumentIdentifier.is(candidate.textDocument) && Array.isArray(candidate.edits);\n  }\n\n  TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\n\nexport var WorkspaceEdit;\n\n(function (WorkspaceEdit) {\n  function is(value) {\n    var candidate = value;\n    return candidate && (candidate.changes !== void 0 || candidate.documentChanges !== void 0) && (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\n  }\n\n  WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\n\nvar TextEditChangeImpl =\n/** @class */\nfunction () {\n  function TextEditChangeImpl(edits) {\n    this.edits = edits;\n  }\n\n  TextEditChangeImpl.prototype.insert = function (position, newText) {\n    this.edits.push(TextEdit.insert(position, newText));\n  };\n\n  TextEditChangeImpl.prototype.replace = function (range, newText) {\n    this.edits.push(TextEdit.replace(range, newText));\n  };\n\n  TextEditChangeImpl.prototype.delete = function (range) {\n    this.edits.push(TextEdit.del(range));\n  };\n\n  TextEditChangeImpl.prototype.add = function (edit) {\n    this.edits.push(edit);\n  };\n\n  TextEditChangeImpl.prototype.all = function () {\n    return this.edits;\n  };\n\n  TextEditChangeImpl.prototype.clear = function () {\n    this.edits.splice(0, this.edits.length);\n  };\n\n  return TextEditChangeImpl;\n}();\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\n\n\nvar WorkspaceChange =\n/** @class */\nfunction () {\n  function WorkspaceChange(workspaceEdit) {\n    var _this = this;\n\n    this._textEditChanges = Object.create(null);\n\n    if (workspaceEdit) {\n      this._workspaceEdit = workspaceEdit;\n\n      if (workspaceEdit.documentChanges) {\n        workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n          var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n          _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n        });\n      } else if (workspaceEdit.changes) {\n        Object.keys(workspaceEdit.changes).forEach(function (key) {\n          var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n          _this._textEditChanges[key] = textEditChange;\n        });\n      }\n    }\n  }\n\n  Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n    /**\r\n     * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n     * use to be returned from a workspace edit operation like rename.\r\n     */\n    get: function get() {\n      return this._workspaceEdit;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  WorkspaceChange.prototype.getTextEditChange = function (key) {\n    if (VersionedTextDocumentIdentifier.is(key)) {\n      if (!this._workspaceEdit) {\n        this._workspaceEdit = {\n          documentChanges: []\n        };\n      }\n\n      if (!this._workspaceEdit.documentChanges) {\n        throw new Error('Workspace edit is not configured for versioned document changes.');\n      }\n\n      var textDocument = key;\n      var result = this._textEditChanges[textDocument.uri];\n\n      if (!result) {\n        var edits = [];\n        var textDocumentEdit = {\n          textDocument: textDocument,\n          edits: edits\n        };\n\n        this._workspaceEdit.documentChanges.push(textDocumentEdit);\n\n        result = new TextEditChangeImpl(edits);\n        this._textEditChanges[textDocument.uri] = result;\n      }\n\n      return result;\n    } else {\n      if (!this._workspaceEdit) {\n        this._workspaceEdit = {\n          changes: Object.create(null)\n        };\n      }\n\n      if (!this._workspaceEdit.changes) {\n        throw new Error('Workspace edit is not configured for normal text edit changes.');\n      }\n\n      var result = this._textEditChanges[key];\n\n      if (!result) {\n        var edits = [];\n        this._workspaceEdit.changes[key] = edits;\n        result = new TextEditChangeImpl(edits);\n        this._textEditChanges[key] = result;\n      }\n\n      return result;\n    }\n  };\n\n  return WorkspaceChange;\n}();\n\nexport { WorkspaceChange };\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\n\nexport var TextDocumentIdentifier;\n\n(function (TextDocumentIdentifier) {\n  /**\r\n   * Creates a new TextDocumentIdentifier literal.\r\n   * @param uri The document's uri.\r\n   */\n  function create(uri) {\n    return {\n      uri: uri\n    };\n  }\n\n  TextDocumentIdentifier.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri);\n  }\n\n  TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\n\n\nexport var VersionedTextDocumentIdentifier;\n\n(function (VersionedTextDocumentIdentifier) {\n  /**\r\n   * Creates a new VersionedTextDocumentIdentifier literal.\r\n   * @param uri The document's uri.\r\n   * @param uri The document's text.\r\n   */\n  function create(uri, version) {\n    return {\n      uri: uri,\n      version: version\n    };\n  }\n\n  VersionedTextDocumentIdentifier.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n  }\n\n  VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\n\n\nexport var TextDocumentItem;\n\n(function (TextDocumentItem) {\n  /**\r\n   * Creates a new TextDocumentItem literal.\r\n   * @param uri The document's uri.\r\n   * @param languageId The document's language identifier.\r\n   * @param version The document's version number.\r\n   * @param text The document's text.\r\n   */\n  function create(uri, languageId, version, text) {\n    return {\n      uri: uri,\n      languageId: languageId,\n      version: version,\n      text: text\n    };\n  }\n\n  TextDocumentItem.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n  }\n\n  TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\n\n\nexport var MarkupKind;\n\n(function (MarkupKind) {\n  /**\r\n   * Plain text is supported as a content format\r\n   */\n  MarkupKind.PlainText = 'plaintext';\n  /**\r\n   * Markdown is supported as a content format\r\n   */\n\n  MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n\n(function (MarkupKind) {\n  /**\r\n   * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n   */\n  function is(value) {\n    var candidate = value;\n    return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n  }\n\n  MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\n\nexport var MarkupContent;\n\n(function (MarkupContent) {\n  /**\r\n   * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n  }\n\n  MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\r\n * The kind of a completion entry.\r\n */\n\n\nexport var CompletionItemKind;\n\n(function (CompletionItemKind) {\n  CompletionItemKind.Text = 1;\n  CompletionItemKind.Method = 2;\n  CompletionItemKind.Function = 3;\n  CompletionItemKind.Constructor = 4;\n  CompletionItemKind.Field = 5;\n  CompletionItemKind.Variable = 6;\n  CompletionItemKind.Class = 7;\n  CompletionItemKind.Interface = 8;\n  CompletionItemKind.Module = 9;\n  CompletionItemKind.Property = 10;\n  CompletionItemKind.Unit = 11;\n  CompletionItemKind.Value = 12;\n  CompletionItemKind.Enum = 13;\n  CompletionItemKind.Keyword = 14;\n  CompletionItemKind.Snippet = 15;\n  CompletionItemKind.Color = 16;\n  CompletionItemKind.File = 17;\n  CompletionItemKind.Reference = 18;\n  CompletionItemKind.Folder = 19;\n  CompletionItemKind.EnumMember = 20;\n  CompletionItemKind.Constant = 21;\n  CompletionItemKind.Struct = 22;\n  CompletionItemKind.Event = 23;\n  CompletionItemKind.Operator = 24;\n  CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\n\n\nexport var InsertTextFormat;\n\n(function (InsertTextFormat) {\n  /**\r\n   * The primary text to be inserted is treated as a plain string.\r\n   */\n  InsertTextFormat.PlainText = 1;\n  /**\r\n   * The primary text to be inserted is treated as a snippet.\r\n   *\r\n   * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n   * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n   * the end of the snippet. Placeholders with equal identifiers are linked,\r\n   * that is typing in one will update others too.\r\n   *\r\n   * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n   */\n\n  InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\n\n\nexport var CompletionItem;\n\n(function (CompletionItem) {\n  /**\r\n   * Create a completion item and seed it with a label.\r\n   * @param label The completion item's label\r\n   */\n  function create(label) {\n    return {\n      label: label\n    };\n  }\n\n  CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\n\n\nexport var CompletionList;\n\n(function (CompletionList) {\n  /**\r\n   * Creates a new completion list.\r\n   *\r\n   * @param items The completion items.\r\n   * @param isIncomplete The list is not complete.\r\n   */\n  function create(items, isIncomplete) {\n    return {\n      items: items ? items : [],\n      isIncomplete: !!isIncomplete\n    };\n  }\n\n  CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\n\nexport var MarkedString;\n\n(function (MarkedString) {\n  /**\r\n   * Creates a marked string from plain text.\r\n   *\r\n   * @param plainText The plain text.\r\n   */\n  function fromPlainText(plainText) {\n    return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n  }\n\n  MarkedString.fromPlainText = fromPlainText;\n  /**\r\n   * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.string(candidate) || Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value);\n  }\n\n  MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\n\nexport var Hover;\n\n(function (Hover) {\n  /**\r\n   * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n   */\n  function is(value) {\n    var candidate = value;\n    return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) || MarkedString.is(candidate.contents) || Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\n  }\n\n  Hover.is = is;\n})(Hover || (Hover = {}));\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\n\n\nexport var ParameterInformation;\n\n(function (ParameterInformation) {\n  /**\r\n   * Creates a new parameter information literal.\r\n   *\r\n   * @param label A label string.\r\n   * @param documentation A doc string.\r\n   */\n  function create(label, documentation) {\n    return documentation ? {\n      label: label,\n      documentation: documentation\n    } : {\n      label: label\n    };\n  }\n\n  ParameterInformation.create = create;\n  ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\n\n\nexport var SignatureInformation;\n\n(function (SignatureInformation) {\n  function create(label, documentation) {\n    var parameters = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      parameters[_i - 2] = arguments[_i];\n    }\n\n    var result = {\n      label: label\n    };\n\n    if (Is.defined(documentation)) {\n      result.documentation = documentation;\n    }\n\n    if (Is.defined(parameters)) {\n      result.parameters = parameters;\n    } else {\n      result.parameters = [];\n    }\n\n    return result;\n  }\n\n  SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\r\n * A document highlight kind.\r\n */\n\n\nexport var DocumentHighlightKind;\n\n(function (DocumentHighlightKind) {\n  /**\r\n   * A textual occurrence.\r\n   */\n  DocumentHighlightKind.Text = 1;\n  /**\r\n   * Read-access of a symbol, like reading a variable.\r\n   */\n\n  DocumentHighlightKind.Read = 2;\n  /**\r\n   * Write-access of a symbol, like writing to a variable.\r\n   */\n\n  DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\n\n\nexport var DocumentHighlight;\n\n(function (DocumentHighlight) {\n  /**\r\n   * Create a DocumentHighlight object.\r\n   * @param range The range the highlight applies to.\r\n   */\n  function create(range, kind) {\n    var result = {\n      range: range\n    };\n\n    if (Is.number(kind)) {\n      result.kind = kind;\n    }\n\n    return result;\n  }\n\n  DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\r\n * A symbol kind.\r\n */\n\n\nexport var SymbolKind;\n\n(function (SymbolKind) {\n  SymbolKind.File = 1;\n  SymbolKind.Module = 2;\n  SymbolKind.Namespace = 3;\n  SymbolKind.Package = 4;\n  SymbolKind.Class = 5;\n  SymbolKind.Method = 6;\n  SymbolKind.Property = 7;\n  SymbolKind.Field = 8;\n  SymbolKind.Constructor = 9;\n  SymbolKind.Enum = 10;\n  SymbolKind.Interface = 11;\n  SymbolKind.Function = 12;\n  SymbolKind.Variable = 13;\n  SymbolKind.Constant = 14;\n  SymbolKind.String = 15;\n  SymbolKind.Number = 16;\n  SymbolKind.Boolean = 17;\n  SymbolKind.Array = 18;\n  SymbolKind.Object = 19;\n  SymbolKind.Key = 20;\n  SymbolKind.Null = 21;\n  SymbolKind.EnumMember = 22;\n  SymbolKind.Struct = 23;\n  SymbolKind.Event = 24;\n  SymbolKind.Operator = 25;\n  SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n\nexport var SymbolInformation;\n\n(function (SymbolInformation) {\n  /**\r\n   * Creates a new symbol information literal.\r\n   *\r\n   * @param name The name of the symbol.\r\n   * @param kind The kind of the symbol.\r\n   * @param range The range of the location of the symbol.\r\n   * @param uri The resource of the location of symbol, defaults to the current document.\r\n   * @param containerName The name of the symbol containing the symbol.\r\n   */\n  function create(name, kind, range, uri, containerName) {\n    var result = {\n      name: name,\n      kind: kind,\n      location: {\n        uri: uri,\n        range: range\n      }\n    };\n\n    if (containerName) {\n      result.containerName = containerName;\n    }\n\n    return result;\n  }\n\n  SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\n\n\nvar DocumentSymbol =\n/** @class */\nfunction () {\n  function DocumentSymbol() {}\n\n  return DocumentSymbol;\n}();\n\nexport { DocumentSymbol };\n\n(function (DocumentSymbol) {\n  /**\r\n   * Creates a new symbol information literal.\r\n   *\r\n   * @param name The name of the symbol.\r\n   * @param detail The detail of the symbol.\r\n   * @param kind The kind of the symbol.\r\n   * @param range The range of the symbol.\r\n   * @param selectionRange The selectionRange of the symbol.\r\n   * @param children Children of the symbol.\r\n   */\n  function create(name, detail, kind, range, selectionRange, children) {\n    var result = {\n      name: name,\n      detail: detail,\n      kind: kind,\n      range: range,\n      selectionRange: selectionRange\n    };\n\n    if (children !== void 0) {\n      result.children = children;\n    }\n\n    return result;\n  }\n\n  DocumentSymbol.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return candidate && Is.string(candidate.name) && Is.string(candidate.detail) && Is.number(candidate.kind) && Range.is(candidate.range) && Range.is(candidate.selectionRange) && (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) && (candidate.children === void 0 || Array.isArray(candidate.children));\n  }\n\n  DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\r\n * A set of predefined code action kinds\r\n */\n\n\nexport var CodeActionKind;\n\n(function (CodeActionKind) {\n  /**\r\n   * Base kind for quickfix actions: 'quickfix'\r\n   */\n  CodeActionKind.QuickFix = 'quickfix';\n  /**\r\n   * Base kind for refactoring actions: 'refactor'\r\n   */\n\n  CodeActionKind.Refactor = 'refactor';\n  /**\r\n   * Base kind for refactoring extraction actions: 'refactor.extract'\r\n   *\r\n   * Example extract actions:\r\n   *\r\n   * - Extract method\r\n   * - Extract function\r\n   * - Extract variable\r\n   * - Extract interface from class\r\n   * - ...\r\n   */\n\n  CodeActionKind.RefactorExtract = 'refactor.extract';\n  /**\r\n   * Base kind for refactoring inline actions: 'refactor.inline'\r\n   *\r\n   * Example inline actions:\r\n   *\r\n   * - Inline function\r\n   * - Inline variable\r\n   * - Inline constant\r\n   * - ...\r\n   */\n\n  CodeActionKind.RefactorInline = 'refactor.inline';\n  /**\r\n   * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n   *\r\n   * Example rewrite actions:\r\n   *\r\n   * - Convert JavaScript function to class\r\n   * - Add or remove parameter\r\n   * - Encapsulate field\r\n   * - Make method static\r\n   * - Move method to base class\r\n   * - ...\r\n   */\n\n  CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n  /**\r\n   * Base kind for source actions: `source`\r\n   *\r\n   * Source code actions apply to the entire file.\r\n   */\n\n  CodeActionKind.Source = 'source';\n  /**\r\n   * Base kind for an organize imports source action: `source.organizeImports`\r\n   */\n\n  CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\n\n\nexport var CodeActionContext;\n\n(function (CodeActionContext) {\n  /**\r\n   * Creates a new CodeActionContext literal.\r\n   */\n  function create(diagnostics, only) {\n    var result = {\n      diagnostics: diagnostics\n    };\n\n    if (only !== void 0 && only !== null) {\n      result.only = only;\n    }\n\n    return result;\n  }\n\n  CodeActionContext.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\n  }\n\n  CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\n\nexport var CodeAction;\n\n(function (CodeAction) {\n  function create(title, commandOrEdit, kind) {\n    var result = {\n      title: title\n    };\n\n    if (Command.is(commandOrEdit)) {\n      result.command = commandOrEdit;\n    } else {\n      result.edit = commandOrEdit;\n    }\n\n    if (kind !== void null) {\n      result.kind = kind;\n    }\n\n    return result;\n  }\n\n  CodeAction.create = create;\n\n  function is(value) {\n    var candidate = value;\n    return candidate && Is.string(candidate.title) && (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) && (candidate.kind === void 0 || Is.string(candidate.kind)) && (candidate.edit !== void 0 || candidate.command !== void 0) && (candidate.command === void 0 || Command.is(candidate.command)) && (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\n  }\n\n  CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\n\n\nexport var CodeLens;\n\n(function (CodeLens) {\n  /**\r\n   * Creates a new CodeLens literal.\r\n   */\n  function create(range, data) {\n    var result = {\n      range: range\n    };\n    if (Is.defined(data)) result.data = data;\n    return result;\n  }\n\n  CodeLens.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n  }\n\n  CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\n\n\nexport var FormattingOptions;\n\n(function (FormattingOptions) {\n  /**\r\n   * Creates a new FormattingOptions literal.\r\n   */\n  function create(tabSize, insertSpaces) {\n    return {\n      tabSize: tabSize,\n      insertSpaces: insertSpaces\n    };\n  }\n\n  FormattingOptions.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n  }\n\n  FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\n\n\nvar DocumentLink =\n/** @class */\nfunction () {\n  function DocumentLink() {}\n\n  return DocumentLink;\n}();\n\nexport { DocumentLink };\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\n\n(function (DocumentLink) {\n  /**\r\n   * Creates a new DocumentLink literal.\r\n   */\n  function create(range, target, data) {\n    return {\n      range: range,\n      target: target,\n      data: data\n    };\n  }\n\n  DocumentLink.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n  }\n\n  DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n\n(function (TextDocument) {\n  /**\r\n   * Creates a new ITextDocument literal from the given uri and content.\r\n   * @param uri The document's uri.\r\n   * @param languageId  The document's language Id.\r\n   * @param content The document's content.\r\n   */\n  function create(uri, languageId, version, content) {\n    return new FullTextDocument(uri, languageId, version, content);\n  }\n\n  TextDocument.create = create;\n  /**\r\n   * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n   */\n\n  function is(value) {\n    var candidate = value;\n    return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount) && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n  }\n\n  TextDocument.is = is;\n\n  function applyEdits(document, edits) {\n    var text = document.getText();\n    var sortedEdits = mergeSort(edits, function (a, b) {\n      var diff = a.range.start.line - b.range.start.line;\n\n      if (diff === 0) {\n        return a.range.start.character - b.range.start.character;\n      }\n\n      return diff;\n    });\n    var lastModifiedOffset = text.length;\n\n    for (var i = sortedEdits.length - 1; i >= 0; i--) {\n      var e = sortedEdits[i];\n      var startOffset = document.offsetAt(e.range.start);\n      var endOffset = document.offsetAt(e.range.end);\n\n      if (endOffset <= lastModifiedOffset) {\n        text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n      } else {\n        throw new Error('Ovelapping edit');\n      }\n\n      lastModifiedOffset = startOffset;\n    }\n\n    return text;\n  }\n\n  TextDocument.applyEdits = applyEdits;\n\n  function mergeSort(data, compare) {\n    if (data.length <= 1) {\n      // sorted\n      return data;\n    }\n\n    var p = data.length / 2 | 0;\n    var left = data.slice(0, p);\n    var right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    var leftIdx = 0;\n    var rightIdx = 0;\n    var i = 0;\n\n    while (leftIdx < left.length && rightIdx < right.length) {\n      var ret = compare(left[leftIdx], right[rightIdx]);\n\n      if (ret <= 0) {\n        // smaller_equal -> take left to preserve order\n        data[i++] = left[leftIdx++];\n      } else {\n        // greater -> take right\n        data[i++] = right[rightIdx++];\n      }\n    }\n\n    while (leftIdx < left.length) {\n      data[i++] = left[leftIdx++];\n    }\n\n    while (rightIdx < right.length) {\n      data[i++] = right[rightIdx++];\n    }\n\n    return data;\n  }\n})(TextDocument || (TextDocument = {}));\n/**\r\n * Represents reasons why a text document is saved.\r\n */\n\n\nexport var TextDocumentSaveReason;\n\n(function (TextDocumentSaveReason) {\n  /**\r\n   * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n   * or by an API call.\r\n   */\n  TextDocumentSaveReason.Manual = 1;\n  /**\r\n   * Automatic after a delay.\r\n   */\n\n  TextDocumentSaveReason.AfterDelay = 2;\n  /**\r\n   * When the editor lost focus.\r\n   */\n\n  TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\n\nvar FullTextDocument =\n/** @class */\nfunction () {\n  function FullTextDocument(uri, languageId, version, content) {\n    this._uri = uri;\n    this._languageId = languageId;\n    this._version = version;\n    this._content = content;\n    this._lineOffsets = null;\n  }\n\n  Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n    get: function get() {\n      return this._uri;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n    get: function get() {\n      return this._languageId;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FullTextDocument.prototype, \"version\", {\n    get: function get() {\n      return this._version;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  FullTextDocument.prototype.getText = function (range) {\n    if (range) {\n      var start = this.offsetAt(range.start);\n      var end = this.offsetAt(range.end);\n      return this._content.substring(start, end);\n    }\n\n    return this._content;\n  };\n\n  FullTextDocument.prototype.update = function (event, version) {\n    this._content = event.text;\n    this._version = version;\n    this._lineOffsets = null;\n  };\n\n  FullTextDocument.prototype.getLineOffsets = function () {\n    if (this._lineOffsets === null) {\n      var lineOffsets = [];\n      var text = this._content;\n      var isLineStart = true;\n\n      for (var i = 0; i < text.length; i++) {\n        if (isLineStart) {\n          lineOffsets.push(i);\n          isLineStart = false;\n        }\n\n        var ch = text.charAt(i);\n        isLineStart = ch === '\\r' || ch === '\\n';\n\n        if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n          i++;\n        }\n      }\n\n      if (isLineStart && text.length > 0) {\n        lineOffsets.push(text.length);\n      }\n\n      this._lineOffsets = lineOffsets;\n    }\n\n    return this._lineOffsets;\n  };\n\n  FullTextDocument.prototype.positionAt = function (offset) {\n    offset = Math.max(Math.min(offset, this._content.length), 0);\n    var lineOffsets = this.getLineOffsets();\n    var low = 0,\n        high = lineOffsets.length;\n\n    if (high === 0) {\n      return Position.create(0, offset);\n    }\n\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n\n      if (lineOffsets[mid] > offset) {\n        high = mid;\n      } else {\n        low = mid + 1;\n      }\n    } // low is the least x for which the line offset is larger than the current offset\n    // or array.length if no line offset is larger than the current offset\n\n\n    var line = low - 1;\n    return Position.create(line, offset - lineOffsets[line]);\n  };\n\n  FullTextDocument.prototype.offsetAt = function (position) {\n    var lineOffsets = this.getLineOffsets();\n\n    if (position.line >= lineOffsets.length) {\n      return this._content.length;\n    } else if (position.line < 0) {\n      return 0;\n    }\n\n    var lineOffset = lineOffsets[position.line];\n    var nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n  };\n\n  Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n    get: function get() {\n      return this.getLineOffsets().length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FullTextDocument;\n}();\n\nvar Is;\n\n(function (Is) {\n  var toString = Object.prototype.toString;\n\n  function defined(value) {\n    return typeof value !== 'undefined';\n  }\n\n  Is.defined = defined;\n\n  function undefined(value) {\n    return typeof value === 'undefined';\n  }\n\n  Is.undefined = undefined;\n\n  function boolean(value) {\n    return value === true || value === false;\n  }\n\n  Is.boolean = boolean;\n\n  function string(value) {\n    return toString.call(value) === '[object String]';\n  }\n\n  Is.string = string;\n\n  function number(value) {\n    return toString.call(value) === '[object Number]';\n  }\n\n  Is.number = number;\n\n  function func(value) {\n    return toString.call(value) === '[object Function]';\n  }\n\n  Is.func = func;\n\n  function objectLiteral(value) {\n    // Strictly speaking class instances pass this check as well. Since the LSP\n    // doesn't use classes we ignore this for now. If we do we need to add something\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n    return value !== null && typeof value === 'object';\n  }\n\n  Is.objectLiteral = objectLiteral;\n\n  function typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n  }\n\n  Is.typedArray = typedArray;\n})(Is || (Is = {}));","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\nvar Uri = monaco.Uri;\nvar Range = monaco.Range; // --- diagnostics --- ---\n\nvar DiagnosticsAdapter =\n/** @class */\nfunction () {\n  function DiagnosticsAdapter(_languageId, _worker, defaults) {\n    var _this = this;\n\n    this._languageId = _languageId;\n    this._worker = _worker;\n    this._disposables = [];\n    this._listener = Object.create(null);\n\n    var onModelAdd = function onModelAdd(model) {\n      var modeId = model.getModeId();\n\n      if (modeId !== _this._languageId) {\n        return;\n      }\n\n      var handle;\n      _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n        clearTimeout(handle);\n        handle = setTimeout(function () {\n          return _this._doValidate(model.uri, modeId);\n        }, 500);\n      });\n\n      _this._doValidate(model.uri, modeId);\n    };\n\n    var onModelRemoved = function onModelRemoved(model) {\n      monaco.editor.setModelMarkers(model, _this._languageId, []);\n      var uriStr = model.uri.toString();\n      var listener = _this._listener[uriStr];\n\n      if (listener) {\n        listener.dispose();\n        delete _this._listener[uriStr];\n      }\n    };\n\n    this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\n\n    this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\n      onModelRemoved(model);\n\n      _this._resetSchema(model.uri);\n    }));\n\n    this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\n      onModelRemoved(event.model);\n      onModelAdd(event.model);\n\n      _this._resetSchema(event.model.uri);\n    }));\n\n    this._disposables.push(defaults.onDidChange(function (_) {\n      monaco.editor.getModels().forEach(function (model) {\n        if (model.getModeId() === _this._languageId) {\n          onModelRemoved(model);\n          onModelAdd(model);\n        }\n      });\n    }));\n\n    this._disposables.push({\n      dispose: function dispose() {\n        monaco.editor.getModels().forEach(onModelRemoved);\n\n        for (var key in _this._listener) {\n          _this._listener[key].dispose();\n        }\n      }\n    });\n\n    monaco.editor.getModels().forEach(onModelAdd);\n  }\n\n  DiagnosticsAdapter.prototype.dispose = function () {\n    this._disposables.forEach(function (d) {\n      return d && d.dispose();\n    });\n\n    this._disposables = [];\n  };\n\n  DiagnosticsAdapter.prototype._resetSchema = function (resource) {\n    this._worker().then(function (worker) {\n      worker.resetSchema(resource.toString());\n    });\n  };\n\n  DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n    this._worker(resource).then(function (worker) {\n      return worker.doValidation(resource.toString()).then(function (diagnostics) {\n        var markers = diagnostics.map(function (d) {\n          return toDiagnostics(resource, d);\n        });\n        var model = monaco.editor.getModel(resource);\n\n        if (model.getModeId() === languageId) {\n          monaco.editor.setModelMarkers(model, languageId, markers);\n        }\n      });\n    }).then(undefined, function (err) {\n      console.error(err);\n    });\n  };\n\n  return DiagnosticsAdapter;\n}();\n\nexport { DiagnosticsAdapter };\n\nfunction toSeverity(lsSeverity) {\n  switch (lsSeverity) {\n    case ls.DiagnosticSeverity.Error:\n      return monaco.MarkerSeverity.Error;\n\n    case ls.DiagnosticSeverity.Warning:\n      return monaco.MarkerSeverity.Warning;\n\n    case ls.DiagnosticSeverity.Information:\n      return monaco.MarkerSeverity.Info;\n\n    case ls.DiagnosticSeverity.Hint:\n      return monaco.MarkerSeverity.Hint;\n\n    default:\n      return monaco.MarkerSeverity.Info;\n  }\n}\n\nfunction toDiagnostics(resource, diag) {\n  var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n  return {\n    severity: toSeverity(diag.severity),\n    startLineNumber: diag.range.start.line + 1,\n    startColumn: diag.range.start.character + 1,\n    endLineNumber: diag.range.end.line + 1,\n    endColumn: diag.range.end.character + 1,\n    message: diag.message,\n    code: code,\n    source: diag.source\n  };\n} // --- completion ------\n\n\nfunction fromPosition(position) {\n  if (!position) {\n    return void 0;\n  }\n\n  return {\n    character: position.column - 1,\n    line: position.lineNumber - 1\n  };\n}\n\nfunction fromRange(range) {\n  if (!range) {\n    return void 0;\n  }\n\n  return {\n    start: {\n      line: range.startLineNumber - 1,\n      character: range.startColumn - 1\n    },\n    end: {\n      line: range.endLineNumber - 1,\n      character: range.endColumn - 1\n    }\n  };\n}\n\nfunction toRange(range) {\n  if (!range) {\n    return void 0;\n  }\n\n  return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\n\nfunction toCompletionItemKind(kind) {\n  var mItemKind = monaco.languages.CompletionItemKind;\n\n  switch (kind) {\n    case ls.CompletionItemKind.Text:\n      return mItemKind.Text;\n\n    case ls.CompletionItemKind.Method:\n      return mItemKind.Method;\n\n    case ls.CompletionItemKind.Function:\n      return mItemKind.Function;\n\n    case ls.CompletionItemKind.Constructor:\n      return mItemKind.Constructor;\n\n    case ls.CompletionItemKind.Field:\n      return mItemKind.Field;\n\n    case ls.CompletionItemKind.Variable:\n      return mItemKind.Variable;\n\n    case ls.CompletionItemKind.Class:\n      return mItemKind.Class;\n\n    case ls.CompletionItemKind.Interface:\n      return mItemKind.Interface;\n\n    case ls.CompletionItemKind.Module:\n      return mItemKind.Module;\n\n    case ls.CompletionItemKind.Property:\n      return mItemKind.Property;\n\n    case ls.CompletionItemKind.Unit:\n      return mItemKind.Unit;\n\n    case ls.CompletionItemKind.Value:\n      return mItemKind.Value;\n\n    case ls.CompletionItemKind.Enum:\n      return mItemKind.Enum;\n\n    case ls.CompletionItemKind.Keyword:\n      return mItemKind.Keyword;\n\n    case ls.CompletionItemKind.Snippet:\n      return mItemKind.Snippet;\n\n    case ls.CompletionItemKind.Color:\n      return mItemKind.Color;\n\n    case ls.CompletionItemKind.File:\n      return mItemKind.File;\n\n    case ls.CompletionItemKind.Reference:\n      return mItemKind.Reference;\n  }\n\n  return mItemKind.Property;\n}\n\nfunction fromCompletionItemKind(kind) {\n  var mItemKind = monaco.languages.CompletionItemKind;\n\n  switch (kind) {\n    case mItemKind.Text:\n      return ls.CompletionItemKind.Text;\n\n    case mItemKind.Method:\n      return ls.CompletionItemKind.Method;\n\n    case mItemKind.Function:\n      return ls.CompletionItemKind.Function;\n\n    case mItemKind.Constructor:\n      return ls.CompletionItemKind.Constructor;\n\n    case mItemKind.Field:\n      return ls.CompletionItemKind.Field;\n\n    case mItemKind.Variable:\n      return ls.CompletionItemKind.Variable;\n\n    case mItemKind.Class:\n      return ls.CompletionItemKind.Class;\n\n    case mItemKind.Interface:\n      return ls.CompletionItemKind.Interface;\n\n    case mItemKind.Module:\n      return ls.CompletionItemKind.Module;\n\n    case mItemKind.Property:\n      return ls.CompletionItemKind.Property;\n\n    case mItemKind.Unit:\n      return ls.CompletionItemKind.Unit;\n\n    case mItemKind.Value:\n      return ls.CompletionItemKind.Value;\n\n    case mItemKind.Enum:\n      return ls.CompletionItemKind.Enum;\n\n    case mItemKind.Keyword:\n      return ls.CompletionItemKind.Keyword;\n\n    case mItemKind.Snippet:\n      return ls.CompletionItemKind.Snippet;\n\n    case mItemKind.Color:\n      return ls.CompletionItemKind.Color;\n\n    case mItemKind.File:\n      return ls.CompletionItemKind.File;\n\n    case mItemKind.Reference:\n      return ls.CompletionItemKind.Reference;\n  }\n\n  return ls.CompletionItemKind.Property;\n}\n\nfunction toTextEdit(textEdit) {\n  if (!textEdit) {\n    return void 0;\n  }\n\n  return {\n    range: toRange(textEdit.range),\n    text: textEdit.newText\n  };\n}\n\nfunction toCompletionItem(entry) {\n  return {\n    label: entry.label,\n    insertText: entry.insertText,\n    sortText: entry.sortText,\n    filterText: entry.filterText,\n    documentation: entry.documentation,\n    detail: entry.detail,\n    kind: toCompletionItemKind(entry.kind),\n    textEdit: toTextEdit(entry.textEdit),\n    data: entry.data\n  };\n}\n\nfunction fromMarkdownString(entry) {\n  return {\n    kind: typeof entry === 'string' ? ls.MarkupKind.PlainText : ls.MarkupKind.Markdown,\n    value: typeof entry === 'string' ? entry : entry.value\n  };\n}\n\nfunction fromCompletionItem(entry) {\n  var item = {\n    label: entry.label,\n    sortText: entry.sortText,\n    filterText: entry.filterText,\n    documentation: fromMarkdownString(entry.documentation),\n    detail: entry.detail,\n    kind: fromCompletionItemKind(entry.kind),\n    data: entry.data\n  };\n\n  if (typeof entry.insertText === 'object' && typeof entry.insertText.value === 'string') {\n    item.insertText = entry.insertText.value;\n    item.insertTextFormat = ls.InsertTextFormat.Snippet;\n  } else {\n    item.insertText = entry.insertText;\n  }\n\n  if (entry.range) {\n    item.textEdit = ls.TextEdit.replace(fromRange(entry.range), item.insertText);\n  }\n\n  return item;\n}\n\nvar CompletionAdapter =\n/** @class */\nfunction () {\n  function CompletionAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n    get: function get() {\n      return [' ', ':'];\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CompletionAdapter.prototype.provideCompletionItems = function (model, position, token) {\n    var wordInfo = model.getWordUntilPosition(position);\n    var resource = model.uri;\n    return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n      return worker.doComplete(resource.toString(), fromPosition(position));\n    }).then(function (info) {\n      if (!info) {\n        return;\n      }\n\n      var items = info.items.map(function (entry) {\n        var item = {\n          label: entry.label,\n          insertText: entry.insertText,\n          sortText: entry.sortText,\n          filterText: entry.filterText,\n          documentation: entry.documentation,\n          detail: entry.detail,\n          kind: toCompletionItemKind(entry.kind)\n        };\n\n        if (entry.textEdit) {\n          item.range = toRange(entry.textEdit.range);\n          item.insertText = entry.textEdit.newText;\n        }\n\n        if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\n          item.insertText = {\n            value: item.insertText\n          };\n        }\n\n        return item;\n      });\n      return {\n        isIncomplete: info.isIncomplete,\n        items: items\n      };\n    }));\n  };\n\n  return CompletionAdapter;\n}();\n\nexport { CompletionAdapter };\n\nfunction isMarkupContent(thing) {\n  return thing && typeof thing === 'object' && typeof thing.kind === 'string';\n}\n\nfunction toMarkdownString(entry) {\n  if (typeof entry === 'string') {\n    return {\n      value: entry\n    };\n  }\n\n  if (isMarkupContent(entry)) {\n    if (entry.kind === 'plaintext') {\n      return {\n        value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n      };\n    }\n\n    return {\n      value: entry.value\n    };\n  }\n\n  return {\n    value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n'\n  };\n}\n\nfunction toMarkedStringArray(contents) {\n  if (!contents) {\n    return void 0;\n  }\n\n  if (Array.isArray(contents)) {\n    return contents.map(toMarkdownString);\n  }\n\n  return [toMarkdownString(contents)];\n} // --- hover ------\n\n\nvar HoverAdapter =\n/** @class */\nfunction () {\n  function HoverAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  HoverAdapter.prototype.provideHover = function (model, position, token) {\n    var resource = model.uri;\n    return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n      return worker.doHover(resource.toString(), fromPosition(position));\n    }).then(function (info) {\n      if (!info) {\n        return;\n      }\n\n      return {\n        range: toRange(info.range),\n        contents: toMarkedStringArray(info.contents)\n      };\n    }));\n  };\n\n  return HoverAdapter;\n}();\n\nexport { HoverAdapter }; // --- definition ------\n\nfunction toLocation(location) {\n  return {\n    uri: Uri.parse(location.uri),\n    range: toRange(location.range)\n  };\n} // --- document symbols ------\n\n\nfunction toSymbolKind(kind) {\n  var mKind = monaco.languages.SymbolKind;\n\n  switch (kind) {\n    case ls.SymbolKind.File:\n      return mKind.Array;\n\n    case ls.SymbolKind.Module:\n      return mKind.Module;\n\n    case ls.SymbolKind.Namespace:\n      return mKind.Namespace;\n\n    case ls.SymbolKind.Package:\n      return mKind.Package;\n\n    case ls.SymbolKind.Class:\n      return mKind.Class;\n\n    case ls.SymbolKind.Method:\n      return mKind.Method;\n\n    case ls.SymbolKind.Property:\n      return mKind.Property;\n\n    case ls.SymbolKind.Field:\n      return mKind.Field;\n\n    case ls.SymbolKind.Constructor:\n      return mKind.Constructor;\n\n    case ls.SymbolKind.Enum:\n      return mKind.Enum;\n\n    case ls.SymbolKind.Interface:\n      return mKind.Interface;\n\n    case ls.SymbolKind.Function:\n      return mKind.Function;\n\n    case ls.SymbolKind.Variable:\n      return mKind.Variable;\n\n    case ls.SymbolKind.Constant:\n      return mKind.Constant;\n\n    case ls.SymbolKind.String:\n      return mKind.String;\n\n    case ls.SymbolKind.Number:\n      return mKind.Number;\n\n    case ls.SymbolKind.Boolean:\n      return mKind.Boolean;\n\n    case ls.SymbolKind.Array:\n      return mKind.Array;\n  }\n\n  return mKind.Function;\n}\n\nvar DocumentSymbolAdapter =\n/** @class */\nfunction () {\n  function DocumentSymbolAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n    var resource = model.uri;\n    return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n      return worker.findDocumentSymbols(resource.toString());\n    }).then(function (items) {\n      if (!items) {\n        return;\n      }\n\n      return items.map(function (item) {\n        return {\n          name: item.name,\n          detail: '',\n          containerName: item.containerName,\n          kind: toSymbolKind(item.kind),\n          range: toRange(item.location.range),\n          selectionRange: toRange(item.location.range)\n        };\n      });\n    }));\n  };\n\n  return DocumentSymbolAdapter;\n}();\n\nexport { DocumentSymbolAdapter };\n\nfunction fromFormattingOptions(options) {\n  return {\n    tabSize: options.tabSize,\n    insertSpaces: options.insertSpaces\n  };\n}\n\nvar DocumentFormattingEditProvider =\n/** @class */\nfunction () {\n  function DocumentFormattingEditProvider(_worker) {\n    this._worker = _worker;\n  }\n\n  DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\n    var resource = model.uri;\n    return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n      return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\n        if (!edits || edits.length === 0) {\n          return;\n        }\n\n        return edits.map(toTextEdit);\n      });\n    }));\n  };\n\n  return DocumentFormattingEditProvider;\n}();\n\nexport { DocumentFormattingEditProvider };\n\nvar DocumentRangeFormattingEditProvider =\n/** @class */\nfunction () {\n  function DocumentRangeFormattingEditProvider(_worker) {\n    this._worker = _worker;\n  }\n\n  DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\n    var resource = model.uri;\n    return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n      return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\n        if (!edits || edits.length === 0) {\n          return;\n        }\n\n        return edits.map(toTextEdit);\n      });\n    }));\n  };\n\n  return DocumentRangeFormattingEditProvider;\n}();\n\nexport { DocumentRangeFormattingEditProvider };\n\nvar DocumentColorAdapter =\n/** @class */\nfunction () {\n  function DocumentColorAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n    var resource = model.uri;\n    return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n      return worker.findDocumentColors(resource.toString());\n    }).then(function (infos) {\n      if (!infos) {\n        return;\n      }\n\n      return infos.map(function (item) {\n        return {\n          color: item.color,\n          range: toRange(item.range)\n        };\n      });\n    }));\n  };\n\n  DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n    var resource = model.uri;\n    return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n      return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range));\n    }).then(function (presentations) {\n      if (!presentations) {\n        return;\n      }\n\n      return presentations.map(function (presentation) {\n        var item = {\n          label: presentation.label\n        };\n\n        if (presentation.textEdit) {\n          item.textEdit = toTextEdit(presentation.textEdit);\n        }\n\n        if (presentation.additionalTextEdits) {\n          item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n        }\n\n        return item;\n      });\n    }));\n  };\n\n  return DocumentColorAdapter;\n}();\n\nexport { DocumentColorAdapter };\n\nvar FoldingRangeAdapter =\n/** @class */\nfunction () {\n  function FoldingRangeAdapter(_worker) {\n    this._worker = _worker;\n  }\n\n  FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n    var resource = model.uri;\n    return wireCancellationToken(token, this._worker(resource).then(function (worker) {\n      return worker.provideFoldingRanges(resource.toString(), context);\n    }).then(function (ranges) {\n      if (!ranges) {\n        return;\n      }\n\n      return ranges.map(function (range) {\n        var result = {\n          start: range.startLine + 1,\n          end: range.endLine + 1\n        };\n\n        if (typeof range.kind !== 'undefined') {\n          result.kind = toFoldingRangeKind(range.kind);\n        }\n\n        return result;\n      });\n    }));\n  };\n\n  return FoldingRangeAdapter;\n}();\n\nexport { FoldingRangeAdapter };\n\nfunction toFoldingRangeKind(kind) {\n  switch (kind) {\n    case ls.FoldingRangeKind.Comment:\n      return monaco.languages.FoldingRangeKind.Comment;\n\n    case ls.FoldingRangeKind.Imports:\n      return monaco.languages.FoldingRangeKind.Imports;\n\n    case ls.FoldingRangeKind.Region:\n      return monaco.languages.FoldingRangeKind.Region;\n  }\n\n  return void 0;\n}\n/**\n * Hook a cancellation token to a WinJS Promise\n */\n\n\nfunction wireCancellationToken(token, promise) {\n  if (promise.cancel) {\n    token.onCancellationRequested(function () {\n      return promise.cancel();\n    });\n  }\n\n  return promise;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\n\nexport function createScanner(text, ignoreTrivia) {\n  if (ignoreTrivia === void 0) {\n    ignoreTrivia = false;\n  }\n\n  var pos = 0,\n      len = text.length,\n      value = '',\n      tokenOffset = 0,\n      token = 16\n  /* Unknown */\n  ,\n      scanError = 0\n  /* None */\n  ;\n\n  function scanHexDigits(count, exact) {\n    var digits = 0;\n    var value = 0;\n\n    while (digits < count || !exact) {\n      var ch = text.charCodeAt(pos);\n\n      if (ch >= 48\n      /* _0 */\n      && ch <= 57\n      /* _9 */\n      ) {\n          value = value * 16 + ch - 48\n          /* _0 */\n          ;\n        } else if (ch >= 65\n      /* A */\n      && ch <= 70\n      /* F */\n      ) {\n          value = value * 16 + ch - 65\n          /* A */\n          + 10;\n        } else if (ch >= 97\n      /* a */\n      && ch <= 102\n      /* f */\n      ) {\n          value = value * 16 + ch - 97\n          /* a */\n          + 10;\n        } else {\n        break;\n      }\n\n      pos++;\n      digits++;\n    }\n\n    if (digits < count) {\n      value = -1;\n    }\n\n    return value;\n  }\n\n  function setPosition(newPosition) {\n    pos = newPosition;\n    value = '';\n    tokenOffset = 0;\n    token = 16\n    /* Unknown */\n    ;\n    scanError = 0\n    /* None */\n    ;\n  }\n\n  function scanNumber() {\n    var start = pos;\n\n    if (text.charCodeAt(pos) === 48\n    /* _0 */\n    ) {\n        pos++;\n      } else {\n      pos++;\n\n      while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n      }\n    }\n\n    if (pos < text.length && text.charCodeAt(pos) === 46\n    /* dot */\n    ) {\n        pos++;\n\n        if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n          pos++;\n\n          while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n            pos++;\n          }\n        } else {\n          scanError = 3\n          /* UnexpectedEndOfNumber */\n          ;\n          return text.substring(start, pos);\n        }\n      }\n\n    var end = pos;\n\n    if (pos < text.length && (text.charCodeAt(pos) === 69\n    /* E */\n    || text.charCodeAt(pos) === 101\n    /* e */\n    )) {\n      pos++;\n\n      if (pos < text.length && text.charCodeAt(pos) === 43\n      /* plus */\n      || text.charCodeAt(pos) === 45\n      /* minus */\n      ) {\n          pos++;\n        }\n\n      if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n        pos++;\n\n        while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n          pos++;\n        }\n\n        end = pos;\n      } else {\n        scanError = 3\n        /* UnexpectedEndOfNumber */\n        ;\n      }\n    }\n\n    return text.substring(start, end);\n  }\n\n  function scanString() {\n    var result = '',\n        start = pos;\n\n    while (true) {\n      if (pos >= len) {\n        result += text.substring(start, pos);\n        scanError = 2\n        /* UnexpectedEndOfString */\n        ;\n        break;\n      }\n\n      var ch = text.charCodeAt(pos);\n\n      if (ch === 34\n      /* doubleQuote */\n      ) {\n          result += text.substring(start, pos);\n          pos++;\n          break;\n        }\n\n      if (ch === 92\n      /* backslash */\n      ) {\n          result += text.substring(start, pos);\n          pos++;\n\n          if (pos >= len) {\n            scanError = 2\n            /* UnexpectedEndOfString */\n            ;\n            break;\n          }\n\n          ch = text.charCodeAt(pos++);\n\n          switch (ch) {\n            case 34\n            /* doubleQuote */\n            :\n              result += '\\\"';\n              break;\n\n            case 92\n            /* backslash */\n            :\n              result += '\\\\';\n              break;\n\n            case 47\n            /* slash */\n            :\n              result += '/';\n              break;\n\n            case 98\n            /* b */\n            :\n              result += '\\b';\n              break;\n\n            case 102\n            /* f */\n            :\n              result += '\\f';\n              break;\n\n            case 110\n            /* n */\n            :\n              result += '\\n';\n              break;\n\n            case 114\n            /* r */\n            :\n              result += '\\r';\n              break;\n\n            case 116\n            /* t */\n            :\n              result += '\\t';\n              break;\n\n            case 117\n            /* u */\n            :\n              var ch_1 = scanHexDigits(4, true);\n\n              if (ch_1 >= 0) {\n                result += String.fromCharCode(ch_1);\n              } else {\n                scanError = 4\n                /* InvalidUnicode */\n                ;\n              }\n\n              break;\n\n            default:\n              scanError = 5\n              /* InvalidEscapeCharacter */\n              ;\n          }\n\n          start = pos;\n          continue;\n        }\n\n      if (ch >= 0 && ch <= 0x1f) {\n        if (isLineBreak(ch)) {\n          result += text.substring(start, pos);\n          scanError = 2\n          /* UnexpectedEndOfString */\n          ;\n          break;\n        } else {\n          scanError = 6\n          /* InvalidCharacter */\n          ; // mark as error but continue with string\n        }\n      }\n\n      pos++;\n    }\n\n    return result;\n  }\n\n  function scanNext() {\n    value = '';\n    scanError = 0\n    /* None */\n    ;\n    tokenOffset = pos;\n\n    if (pos >= len) {\n      // at the end\n      tokenOffset = len;\n      return token = 17\n      /* EOF */\n      ;\n    }\n\n    var code = text.charCodeAt(pos); // trivia: whitespace\n\n    if (isWhiteSpace(code)) {\n      do {\n        pos++;\n        value += String.fromCharCode(code);\n        code = text.charCodeAt(pos);\n      } while (isWhiteSpace(code));\n\n      return token = 15\n      /* Trivia */\n      ;\n    } // trivia: newlines\n\n\n    if (isLineBreak(code)) {\n      pos++;\n      value += String.fromCharCode(code);\n\n      if (code === 13\n      /* carriageReturn */\n      && text.charCodeAt(pos) === 10\n      /* lineFeed */\n      ) {\n          pos++;\n          value += '\\n';\n        }\n\n      return token = 14\n      /* LineBreakTrivia */\n      ;\n    }\n\n    switch (code) {\n      // tokens: []{}:,\n      case 123\n      /* openBrace */\n      :\n        pos++;\n        return token = 1\n        /* OpenBraceToken */\n        ;\n\n      case 125\n      /* closeBrace */\n      :\n        pos++;\n        return token = 2\n        /* CloseBraceToken */\n        ;\n\n      case 91\n      /* openBracket */\n      :\n        pos++;\n        return token = 3\n        /* OpenBracketToken */\n        ;\n\n      case 93\n      /* closeBracket */\n      :\n        pos++;\n        return token = 4\n        /* CloseBracketToken */\n        ;\n\n      case 58\n      /* colon */\n      :\n        pos++;\n        return token = 6\n        /* ColonToken */\n        ;\n\n      case 44\n      /* comma */\n      :\n        pos++;\n        return token = 5\n        /* CommaToken */\n        ;\n      // strings\n\n      case 34\n      /* doubleQuote */\n      :\n        pos++;\n        value = scanString();\n        return token = 10\n        /* StringLiteral */\n        ;\n      // comments\n\n      case 47\n      /* slash */\n      :\n        var start = pos - 1; // Single-line comment\n\n        if (text.charCodeAt(pos + 1) === 47\n        /* slash */\n        ) {\n            pos += 2;\n\n            while (pos < len) {\n              if (isLineBreak(text.charCodeAt(pos))) {\n                break;\n              }\n\n              pos++;\n            }\n\n            value = text.substring(start, pos);\n            return token = 12\n            /* LineCommentTrivia */\n            ;\n          } // Multi-line comment\n\n\n        if (text.charCodeAt(pos + 1) === 42\n        /* asterisk */\n        ) {\n            pos += 2;\n            var commentClosed = false;\n\n            while (pos < len) {\n              var ch = text.charCodeAt(pos);\n\n              if (ch === 42\n              /* asterisk */\n              && pos + 1 < len && text.charCodeAt(pos + 1) === 47\n              /* slash */\n              ) {\n                  pos += 2;\n                  commentClosed = true;\n                  break;\n                }\n\n              pos++;\n            }\n\n            if (!commentClosed) {\n              pos++;\n              scanError = 1\n              /* UnexpectedEndOfComment */\n              ;\n            }\n\n            value = text.substring(start, pos);\n            return token = 13\n            /* BlockCommentTrivia */\n            ;\n          } // just a single slash\n\n\n        value += String.fromCharCode(code);\n        pos++;\n        return token = 16\n        /* Unknown */\n        ;\n      // numbers\n\n      case 45\n      /* minus */\n      :\n        value += String.fromCharCode(code);\n        pos++;\n\n        if (pos === len || !isDigit(text.charCodeAt(pos))) {\n          return token = 16\n          /* Unknown */\n          ;\n        }\n\n      // found a minus, followed by a number so\n      // we fall through to proceed with scanning\n      // numbers\n\n      case 48\n      /* _0 */\n      :\n      case 49\n      /* _1 */\n      :\n      case 50\n      /* _2 */\n      :\n      case 51\n      /* _3 */\n      :\n      case 52\n      /* _4 */\n      :\n      case 53\n      /* _5 */\n      :\n      case 54\n      /* _6 */\n      :\n      case 55\n      /* _7 */\n      :\n      case 56\n      /* _8 */\n      :\n      case 57\n      /* _9 */\n      :\n        value += scanNumber();\n        return token = 11\n        /* NumericLiteral */\n        ;\n      // literals and unknown symbols\n\n      default:\n        // is a literal? Read the full word.\n        while (pos < len && isUnknownContentCharacter(code)) {\n          pos++;\n          code = text.charCodeAt(pos);\n        }\n\n        if (tokenOffset !== pos) {\n          value = text.substring(tokenOffset, pos); // keywords: true, false, null\n\n          switch (value) {\n            case 'true':\n              return token = 8\n              /* TrueKeyword */\n              ;\n\n            case 'false':\n              return token = 9\n              /* FalseKeyword */\n              ;\n\n            case 'null':\n              return token = 7\n              /* NullKeyword */\n              ;\n          }\n\n          return token = 16\n          /* Unknown */\n          ;\n        } // some\n\n\n        value += String.fromCharCode(code);\n        pos++;\n        return token = 16\n        /* Unknown */\n        ;\n    }\n  }\n\n  function isUnknownContentCharacter(code) {\n    if (isWhiteSpace(code) || isLineBreak(code)) {\n      return false;\n    }\n\n    switch (code) {\n      case 125\n      /* closeBrace */\n      :\n      case 93\n      /* closeBracket */\n      :\n      case 123\n      /* openBrace */\n      :\n      case 91\n      /* openBracket */\n      :\n      case 34\n      /* doubleQuote */\n      :\n      case 58\n      /* colon */\n      :\n      case 44\n      /* comma */\n      :\n      case 47\n      /* slash */\n      :\n        return false;\n    }\n\n    return true;\n  }\n\n  function scanNextNonTrivia() {\n    var result;\n\n    do {\n      result = scanNext();\n    } while (result >= 12\n    /* LineCommentTrivia */\n    && result <= 15\n    /* Trivia */\n    );\n\n    return result;\n  }\n\n  return {\n    setPosition: setPosition,\n    getPosition: function getPosition() {\n      return pos;\n    },\n    scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n    getToken: function getToken() {\n      return token;\n    },\n    getTokenValue: function getTokenValue() {\n      return value;\n    },\n    getTokenOffset: function getTokenOffset() {\n      return tokenOffset;\n    },\n    getTokenLength: function getTokenLength() {\n      return pos - tokenOffset;\n    },\n    getTokenError: function getTokenError() {\n      return scanError;\n    }\n  };\n}\n\nfunction isWhiteSpace(ch) {\n  return ch === 32\n  /* space */\n  || ch === 9\n  /* tab */\n  || ch === 11\n  /* verticalTab */\n  || ch === 12\n  /* formFeed */\n  || ch === 160\n  /* nonBreakingSpace */\n  || ch === 5760\n  /* ogham */\n  || ch >= 8192\n  /* enQuad */\n  && ch <= 8203\n  /* zeroWidthSpace */\n  || ch === 8239\n  /* narrowNoBreakSpace */\n  || ch === 8287\n  /* mathematicalSpace */\n  || ch === 12288\n  /* ideographicSpace */\n  || ch === 65279\n  /* byteOrderMark */\n  ;\n}\n\nfunction isLineBreak(ch) {\n  return ch === 10\n  /* lineFeed */\n  || ch === 13\n  /* carriageReturn */\n  || ch === 8232\n  /* lineSeparator */\n  || ch === 8233\n  /* paragraphSeparator */\n  ;\n}\n\nfunction isDigit(ch) {\n  return ch >= 48\n  /* _0 */\n  && ch <= 57\n  /* _9 */\n  ;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\n\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\n\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\n\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\n\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\n\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\n\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\n\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\n\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\n\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\n\nexport var stripComments = parser.stripComments;\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\n\nexport function format(documentText, range, options) {\n  return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\n\nexport function modify(text, path, value, options) {\n  return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\n\nexport function applyEdits(text, edits) {\n  for (var i = edits.length - 1; i >= 0; i--) {\n    text = edit.applyEdit(text, edits[i]);\n  }\n\n  return text;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as json from './_deps/jsonc-parser/main.js';\nexport function createTokenizationSupport(supportComments) {\n  return {\n    getInitialState: function getInitialState() {\n      return new JSONState(null, null, false);\n    },\n    tokenize: function tokenize(line, state, offsetDelta, stopAtOffset) {\n      return _tokenize(supportComments, line, state, offsetDelta, stopAtOffset);\n    }\n  };\n}\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\nexport var TOKEN_VALUE_NULL = 'keyword.json';\nexport var TOKEN_VALUE_STRING = 'string.value.json';\nexport var TOKEN_VALUE_NUMBER = 'number.json';\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\n\nvar JSONState =\n/** @class */\nfunction () {\n  function JSONState(state, scanError, lastWasColon) {\n    this._state = state;\n    this.scanError = scanError;\n    this.lastWasColon = lastWasColon;\n  }\n\n  JSONState.prototype.clone = function () {\n    return new JSONState(this._state, this.scanError, this.lastWasColon);\n  };\n\n  JSONState.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    }\n\n    if (!other || !(other instanceof JSONState)) {\n      return false;\n    }\n\n    return this.scanError === other.scanError && this.lastWasColon === other.lastWasColon;\n  };\n\n  JSONState.prototype.getStateData = function () {\n    return this._state;\n  };\n\n  JSONState.prototype.setStateData = function (state) {\n    this._state = state;\n  };\n\n  return JSONState;\n}();\n\nfunction _tokenize(comments, line, state, offsetDelta, stopAtOffset) {\n  if (offsetDelta === void 0) {\n    offsetDelta = 0;\n  } // handle multiline strings and block comments\n\n\n  var numberOfInsertedCharacters = 0,\n      adjustOffset = false;\n\n  switch (state.scanError) {\n    case 2\n    /* UnexpectedEndOfString */\n    :\n      line = '\"' + line;\n      numberOfInsertedCharacters = 1;\n      break;\n\n    case 1\n    /* UnexpectedEndOfComment */\n    :\n      line = '/*' + line;\n      numberOfInsertedCharacters = 2;\n      break;\n  }\n\n  var scanner = json.createScanner(line),\n      kind,\n      ret,\n      lastWasColon = state.lastWasColon;\n  ret = {\n    tokens: [],\n    endState: state.clone()\n  };\n\n  while (true) {\n    var offset = offsetDelta + scanner.getPosition(),\n        type = '';\n    kind = scanner.scan();\n\n    if (kind === 17\n    /* EOF */\n    ) {\n        break;\n      } // Check that the scanner has advanced\n\n\n    if (offset === offsetDelta + scanner.getPosition()) {\n      throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\n    } // In case we inserted /* or \" character, we need to\n    // adjust the offset of all tokens (except the first)\n\n\n    if (adjustOffset) {\n      offset -= numberOfInsertedCharacters;\n    }\n\n    adjustOffset = numberOfInsertedCharacters > 0; // brackets and type\n\n    switch (kind) {\n      case 1\n      /* OpenBraceToken */\n      :\n        type = TOKEN_DELIM_OBJECT;\n        lastWasColon = false;\n        break;\n\n      case 2\n      /* CloseBraceToken */\n      :\n        type = TOKEN_DELIM_OBJECT;\n        lastWasColon = false;\n        break;\n\n      case 3\n      /* OpenBracketToken */\n      :\n        type = TOKEN_DELIM_ARRAY;\n        lastWasColon = false;\n        break;\n\n      case 4\n      /* CloseBracketToken */\n      :\n        type = TOKEN_DELIM_ARRAY;\n        lastWasColon = false;\n        break;\n\n      case 6\n      /* ColonToken */\n      :\n        type = TOKEN_DELIM_COLON;\n        lastWasColon = true;\n        break;\n\n      case 5\n      /* CommaToken */\n      :\n        type = TOKEN_DELIM_COMMA;\n        lastWasColon = false;\n        break;\n\n      case 8\n      /* TrueKeyword */\n      :\n      case 9\n      /* FalseKeyword */\n      :\n        type = TOKEN_VALUE_BOOLEAN;\n        lastWasColon = false;\n        break;\n\n      case 7\n      /* NullKeyword */\n      :\n        type = TOKEN_VALUE_NULL;\n        lastWasColon = false;\n        break;\n\n      case 10\n      /* StringLiteral */\n      :\n        type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\n        lastWasColon = false;\n        break;\n\n      case 11\n      /* NumericLiteral */\n      :\n        type = TOKEN_VALUE_NUMBER;\n        lastWasColon = false;\n        break;\n    } // comments, iff enabled\n\n\n    if (comments) {\n      switch (kind) {\n        case 12\n        /* LineCommentTrivia */\n        :\n          type = TOKEN_COMMENT_LINE;\n          break;\n\n        case 13\n        /* BlockCommentTrivia */\n        :\n          type = TOKEN_COMMENT_BLOCK;\n          break;\n      }\n    }\n\n    ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\n    ret.tokens.push({\n      startIndex: offset,\n      scopes: type\n    });\n  }\n\n  return ret;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { WorkerManager } from './workerManager.js';\nimport * as languageFeatures from './languageFeatures.js';\nimport { createTokenizationSupport } from './tokenization.js';\nexport function setupMode(defaults) {\n  var disposables = [];\n  var client = new WorkerManager(defaults);\n  disposables.push(client);\n\n  var worker = function worker() {\n    var uris = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      uris[_i] = arguments[_i];\n    }\n\n    return client.getLanguageServiceWorker.apply(client, uris);\n  };\n\n  var languageId = defaults.languageId;\n  disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\n  disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\n  disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\n  disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\n  disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\n  disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\n  disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\n  disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\n  disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\n  disposables.push(monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker)));\n}\nvar richEditConfiguration = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/']\n  },\n  brackets: [['{', '}'], ['[', ']']],\n  autoClosingPairs: [{\n    open: '{',\n    close: '}',\n    notIn: ['string']\n  }, {\n    open: '[',\n    close: ']',\n    notIn: ['string']\n  }, {\n    open: '\"',\n    close: '\"',\n    notIn: ['string']\n  }]\n};"],"sourceRoot":""}